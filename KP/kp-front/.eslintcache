[{"C:\\Users\\Iva\\FTNGIT\\LiteralnoUdruzenje\\KP\\kp-front\\src\\index.js":"1","C:\\Users\\Iva\\FTNGIT\\LiteralnoUdruzenje\\KP\\kp-front\\src\\App.js":"2","C:\\Users\\Iva\\FTNGIT\\LiteralnoUdruzenje\\KP\\kp-front\\src\\reportWebVitals.js":"3","C:\\Users\\Iva\\FTNGIT\\LiteralnoUdruzenje\\KP\\kp-front\\src\\PaymentMethods.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":600,"mtime":1610319671517,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":2461,"mtime":1610319671379,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1jz0yw3",{"filePath":"13","messages":"14","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"C:\\Users\\Iva\\FTNGIT\\LiteralnoUdruzenje\\KP\\kp-front\\src\\index.js",[],["21","22"],"C:\\Users\\Iva\\FTNGIT\\LiteralnoUdruzenje\\KP\\kp-front\\src\\App.js",["23","24","25"],"import logo from './logo.svg';\nimport React, { Component} from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport PaymentsMethods from './PaymentMethods';\n\n\nclass App extends Component {\n  constructor(props) {\n    super (props)\n    \n  } \n\n\n  render () {\n    return (\n      <Router>\n        <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" /> \n          <Route exact path=\"/:merchantId\" component={PaymentsMethods} />\n        </Switch>\n        </div>\n      </Router>\n    );\n\n  }\n  \n}\n\nexport default App;\n","C:\\Users\\Iva\\FTNGIT\\LiteralnoUdruzenje\\KP\\kp-front\\src\\reportWebVitals.js",[],"C:\\Users\\Iva\\FTNGIT\\LiteralnoUdruzenje\\KP\\kp-front\\src\\PaymentMethods.js",["26","27","28"],"import logo from './logo.svg';\r\nimport React, { Component} from 'react';\r\nimport './App.css';\r\nimport paypal from './assets/paypal.png';\r\nimport bitcoin from './assets/bitcoin.png';\r\nimport bank from './assets/bank.png';\r\n\r\nclass PaymentsMethods extends Component {\r\n  constructor(props) {\r\n    super (props)\r\n    this.state={\r\n      paymentsMethods: ['paypal', 'bitcoin', 'bank'], \r\n      error: '',\r\n      merchantId: props.match.params.merchantId,\r\n    }\r\n  } \r\n\r\n  //get all method for merchant\r\n  componentDidMount = async () => {\r\n    try {\r\n      let response = await (await fetch(`http://localhost:8084/getTypes/${this.state.merchantId}`, {\r\n        method: 'get',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n        },\r\n      })).json();\r\n      this.setState({\r\n        paymentsMethods: response,\r\n      })\r\n    } catch (err) {\r\n      this.setState({\r\n        errors: err.toString()\r\n      });\r\n    }\r\n  }\r\n\r\n  //on pay click\r\n  getMethod = async (e)  => {\r\n    console.log(e.target.value);\r\n    try {\r\n      let response = await (await fetch('http://localhost:8081/', {\r\n        method: 'get',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n\t\t\t\t\t'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n      \r\n        })\r\n      })).json();\r\n  \r\n    } catch (err) {\r\n      this.setState({\r\n        errors: err.toString()\r\n      });\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <div className=\"main-container\">\r\n          <div><h4>Choose payment method</h4></div>\r\n          {this.state.paymentsMethods.map(item => {\r\n            let src = '';\r\n            if (item === 'bitcoin') {\r\n              src = bitcoin;\r\n            } else if (item === 'bank') {\r\n              src = bank;\r\n            } else if (item === 'paypal') {\r\n              src = paypal;\r\n            }\r\n            return(\r\n              <div className=\"item\" onClick={e => this.getMethod(e)}>\r\n                <div className=\"inline\">\r\n                  <img width=\"25px\" height=\"25px\" className=\"image\" src={src} />\r\n                </div>\r\n                <div className=\"inline padding-bottom\">\r\n                  {item}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          </div>\r\n        </header>\r\n      </div>\r\n    );\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport default PaymentsMethods;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"37","line":8,"column":3,"nodeType":"35","messageId":"36","endLine":8,"endColumn":7},{"ruleId":"38","severity":1,"message":"39","line":14,"column":3,"nodeType":"40","messageId":"41","endLine":17,"endColumn":4},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"33","severity":1,"message":"42","line":44,"column":11,"nodeType":"35","messageId":"36","endLine":44,"endColumn":19},{"ruleId":"43","severity":1,"message":"44","line":80,"column":19,"nodeType":"45","endLine":80,"endColumn":81},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]