[{"C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\index.js":"1","C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\reportWebVitals.js":"2","C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\App.js":"3","C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\ConfirmationPaypal.js":"4","C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\PaymentMethods.js":"5","C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\RegisterSeller.js":"6"},{"size":565,"mtime":1611352515533,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1610300378955,"results":"9","hashOfConfig":"8"},{"size":886,"mtime":1611352515510,"results":"10","hashOfConfig":"8"},{"size":1781,"mtime":1610494086213,"results":"11","hashOfConfig":"8"},{"size":4435,"mtime":1612207652821,"results":"12","hashOfConfig":"8"},{"size":2435,"mtime":1611352515521,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"qnftrn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\index.js",[],["30","31"],"C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\reportWebVitals.js",[],"C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\App.js",["32","33","34"],"import logo from './logo.svg';\r\nimport React, { Component} from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport PaymentsMethods from './PaymentMethods';\r\nimport ConfirmationPaypal from './ConfirmationPaypal';\r\nimport RegisterSeller from './RegisterSeller';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super (props)\r\n    \r\n  } \r\n\r\n\r\n  render () {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\" /> \r\n          <Route exact path=\"/:id/:amount\" component={PaymentsMethods} />\r\n          <Route path=\"/confirmationPaypal\" component={ConfirmationPaypal} />\r\n          <Route path=\"/registration\" component={RegisterSeller} />\r\n        </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\ConfirmationPaypal.js",["35"],"import logo from './logo.svg';\r\nimport React, { Component} from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass ConfirmationPaypal extends Component {\r\n  constructor(props) {\r\n    super (props)\r\n    let params = new window.URLSearchParams(window.location.search)\r\n    let paymentId = params.get('paymentId')\r\n    let token = params.get('token')\r\n    let PayerID = params.get('PayerID')\r\n    this.state={\r\n      paymentId: paymentId,\r\n      token: token,\r\n      PayerID: PayerID\r\n  }} \r\n    componentDidMount(){\r\n      console.log(this.state.paymentId);\r\n      console.log(this.state.token);\r\n      console.log(this.state.PayerID);\r\n    }\r\n      confirm = async ()=>{\r\n        try {\r\n         \r\n          let response = await (await fetch(`http://localhost:8085/complete/payment?paymentId=${this.state.paymentId}&token=${this.state.token}&PayerID=${this.state.PayerID}`, {\r\n              method: 'get',\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n              \r\n            })).json();\r\n            alert('Uspesna preplata');\r\n            console.log(response);\r\n          } catch (err) {\r\n            this.setState({\r\n              errors: err.toString()\r\n            });\r\n          }\r\n      }\r\n      render (){\r\n          return ( \r\n            <div className=\"App\">\r\n            <header className=\"App-header\">\r\n            <div className=\"main-container\">\r\n              <div><h4>Confirm paypal payment</h4></div>\r\n                <button className = \"btn btn-primary\" onClick = {this.confirm } >\r\n                  Confirm\r\n                </button>\r\n              </div>\r\n            </header>\r\n          </div>\r\n      )\r\n      }\r\n\r\n\r\n    }\r\n\r\n    export default ConfirmationPaypal;","C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\PaymentMethods.js",["36","37"],"C:\\Users\\stefan\\Documents\\GitHub\\LiteralnoUdruzenje\\KP\\kp-front\\src\\RegisterSeller.js",["38","39","40","41"],"import logo from './logo.svg';\r\nimport React, { Component} from 'react';\r\nimport './App.css';\r\nimport paypal from './assets/paypal.png';\r\nimport bitcoin from './assets/bitcoin.png';\r\nimport bank from './assets/bank.png';\r\n\r\n\r\nclass RegisterSeller extends Component {\r\n  constructor(props) {\r\n    super (props)\r\n    this.state={\r\n      paymentsMethods: ['paypal'], \r\n      error: '',\r\n    }\r\n  } \r\n\r\n  onChange = (value) => {\r\n    if (!this.state.paymentsMethods.includes(value)) {\r\n      this.setState({\r\n        paymentsMethods: this.state.paymentsMethods.concat([value])\r\n      })\r\n    } else {\r\n      this.setState({\r\n        paymentsMethods: this.state.paymentsMethods.filter(item => item !== value)\r\n      })\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        <div className=\"main-container\">\r\n          <div><h4>Register as Seller</h4></div>\r\n        </div>\r\n          <form className=\"mt-3\">\r\n            <p className=\"font-12 m-0 p-0 align-left\">Name:</p>\r\n            <input className=\"font-12\" type=\"text\" name=\"name\" />\r\n            <p className=\"font-12 m-0 p-0 align-left\">Lastname:</p>\r\n            <input className=\"font-12\" type=\"text\" name=\"lastname\" />\r\n            <div className=\"mt-2\">\r\n              <div>\r\n                <input type=\"checkbox\" value=\"paypal\" checked={this.state.paymentsMethods.includes(\"paypal\") ? true : false} name=\"paypal\" onChange={e => this.onChange(e.target.value)} />\r\n                <img className=\"ml-2\" src={paypal} width=\"32px\" height=\"32px\"/>\r\n              </div>\r\n              <div>\r\n                <input type=\"checkbox\" value=\"bitcoin\" checked={this.state.paymentsMethods.includes(\"bitcoin\") ? true : false} onChange={e => this.onChange(e.target.value)}  />\r\n                <img className=\"ml-2\" src={bitcoin} width=\"32px\" height=\"32px\" />\r\n              </div>\r\n              <div>\r\n                <input type=\"checkbox\"  value=\"bank\" checked={this.state.paymentsMethods.includes(\"bank\") ? true: false} onChange={e => this.onChange(e.target.value)}  />\r\n                <img className=\"ml-2\" src={bank} width=\"32px\" height=\"32px\"/>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <button className=\"btn btn-primary mt-3\" type=\"submit\">Register</button>\r\n        </header>\r\n        </div>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default RegisterSeller;",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":8,"column":3,"nodeType":"48","messageId":"49","endLine":8,"endColumn":7},{"ruleId":"51","severity":1,"message":"52","line":15,"column":3,"nodeType":"53","messageId":"54","endLine":18,"endColumn":4},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":134,"column":19,"nodeType":"57","endLine":134,"endColumn":81},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":46,"column":17,"nodeType":"57","endLine":46,"endColumn":80},{"ruleId":"55","severity":1,"message":"56","line":50,"column":17,"nodeType":"57","endLine":50,"endColumn":82},{"ruleId":"55","severity":1,"message":"56","line":54,"column":17,"nodeType":"57","endLine":54,"endColumn":78},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]